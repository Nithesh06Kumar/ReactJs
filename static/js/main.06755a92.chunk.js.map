{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","alt","src","CardList","cardComponent","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAACC,GACZ,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACE,6BAAKF,IACL,4BAAIC,WCIGK,EAVE,SAAC,GAAgB,IAI1BC,EAJyB,EAAbC,OAIWC,KAAI,SAACC,EAAMC,GACtC,OAAO,cAAC,EAAD,CAAcT,GAAIQ,EAAKR,GAAIF,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAA7CU,MAEpB,OAAO,8BAAMJ,KCKAK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,wCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGHI,G,MAVA,SAAClB,GACd,OACE,qBACEmB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGtB,EAAMuB,aCeEC,E,kDAnBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,qDAOd,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAK7B,MAAMuB,a,GAhBKQ,aCsDZC,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACH7C,MAAK,SAAC8C,GAAD,OAAcA,EAASC,UAC5B/C,MAAK,SAACgD,GAAD,OAAW,EAAKX,SAAS,CAAErB,OAAQgC,S,oBAM7C,WAAU,IAAD,OACDC,EAAiBb,KAAKJ,MAAMhB,OAAOkC,QAAO,SAACC,GAC/C,OAAOA,EAAM3C,KACV4C,cACAC,SAAS,EAAKrB,MAAMU,YAAYU,kBAGrC,OAAiC,IAA7BhB,KAAKJ,MAAMhB,OAAOsC,OAElB,sBAAK3C,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,iFAKF,sBAAK7B,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQiC,e,GAxCdX,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.06755a92.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = (props) => {\n  const { name, email, id } = props;\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"profile\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error(\"Hwyyyy\");\n  // }\n  const cardComponent = robots.map((user, i) => {\n    return <Card key={i} id={user.id} name={user.name} email={user.email} />;\n  });\n  return <div>{cardComponent}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue w-30\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"500px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooooops. Thats an ERROR!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from \"react\";\nimport CardList from \"../Components/CardList\";\n// import { robots } from \"./robots\";\nimport SearchBox from \"../Components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../Components/Scroll\";\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return (\n        <div className=\"tc\">\n          <h1>ROBO FRIENDS</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <h2>Loading ðŸ”˜ðŸ”˜ðŸ”˜</h2>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1>ROBO FRIENDS</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./Containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}